/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from "three";
import { useEffect, useRef } from "react";
import { useGLTF, useAnimations } from "@react-three/drei";
import { GLTF } from "three/examples/jsm/Addons.js";

type GLTFResult = GLTF & {
    nodes: {
        druid: THREE.SkinnedMesh;
        root: THREE.Bone;
    };
    materials: {
        color_main: THREE.MeshStandardMaterial;
    };
};

// type ActionName = "PortalOpen" | "Still" | "Waiting";
// type GLTFActions = Record<ActionName, THREE.AnimationAction>;

export function Mago(props: JSX.IntrinsicElements["group"]) {
    const group = useRef<THREE.Group>(null);
    const { nodes, materials, animations } = useGLTF(
        "https://vazxmixjsiawhamofees.supabase.co/storage/v1/object/public/models/druid/model.gltf"
    ) as unknown as GLTFResult;
    const { actions } = useAnimations(animations, group);

    useEffect(() => {
        const action = actions["PortalOpen"]; // Nombre de la acción de animación
        if (action) {
            action.play(); // Iniciar la animación
        }
    }, [actions]);

    return (
        <group ref={group} {...props} dispose={null}>
            <group scale={1.91}>
                <primitive object={nodes.root} />
                <skinnedMesh
                    geometry={nodes.druid.geometry}
                    material={materials.color_main}
                    skeleton={nodes.druid.skeleton}
                />
            </group>
        </group>
    );
}

useGLTF.preload("/mago.gltf");
